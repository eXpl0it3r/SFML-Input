name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-2019,  flags: -DBUILD_SHARED_LIBS=OFF -DSFML_USE_STATIC_STD_LIBS=ON }
        - { name: Windows VS2022, os: windows-2022,  flags: -DBUILD_SHARED_LIBS=OFF -DSFML_USE_STATIC_STD_LIBS=ON }
        - { name: Linux GCC,      os: ubuntu-latest, flags: -DBUILD_SHARED_LIBS=ON }
        - { name: Linux Clang,    os: ubuntu-latest, flags: -DBUILD_SHARED_LIBS=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: MacOS XCode,    os: macos-latest,  flags: -DBUILD_SHARED_LIBS=ON }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libxi-dev libudev-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: SFML-Input - Checkout Code
      uses: actions/checkout@v2

    - name: SFML - Checkout Code
      uses: actions/checkout@v2
      with:
        repository: SFML/SFML
        ref: master
        path: SFML

    - name: SFML - Configure CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE/SFML -B $GITHUB_WORKSPACE/SFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/SFML/install -DCMAKE_VERBOSE_MAKEFILE=ON ${{matrix.platform.flags}}

    - name: SFML - Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/SFML/build --config Release --target install

    - name: SFML-Input - Configure CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install -DCMAKE_VERBOSE_MAKEFILE=ON -DSFML_ROOT=$GITHUB_WORKSPACE/SFML/install ${{matrix.platform.flags}}

    - name: SFML-Input - Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/build --config Release --target install